{"title":"Visual Statistical Analysis","markdown":{"yaml":{"title":"Visual Statistical Analysis","date":"12/4/2023","date-modified":"`r Sys.Date()`","format":"html","execute":{"echo":true,"eval":true,"warning":false}},"headingText":"Learning Outcome","containsRefs":false,"markdown":"\n\n\nIn this hands-on exercise, you will gain hands-on experience on using:\n\n-   ggstatsplot package to create visual graphics with rich statistical information,\n\n-   performance package to visualise model diagnostics, and\n\n-   parameters package to visualise model parameters\n\n## Visual Statistical Analysis with **ggstatsplot**\n\n![](chap09/img/image1.jpg){width=\"47\" height=\"49\"}\n\n-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/index.html) is an extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n    -   To provide alternative statistical inference methods by default.\n    -   To follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the [APA](https://my.ilstu.edu/~jhkahn/apastats.html) gold standard for statistical reporting. For example, here are results from a robust t-test:\n\n![](chap09/img/image2.jpg)\n\n## Getting Started\n\n### Installing and launching R packages\n\nIn this exercise, **ggstatsplot** and **tidyverse** will be used.\n\n```{r}\npacman::p_load(ggstatsplot, tidyverse)\n```\n\n### Importing data\n\n::: callout-note\n### Do-It-Yourself\n\nImporting *Exam.csv* data by using appropriate tidyverse package.\n:::\n\n```{r}\n#| echo: false\nexam <- read_csv(\"data/Exam_data.csv\")\nexam\n```\n\n### One-sample test: *gghistostats()* method\n\nIn the code chunk below, [*gghistostats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) is used to to build an visual of one-sample test on English scores.\n\n```{r}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n```\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n### Unpacking the Bayes Factor\n\n-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\n\n-   That's because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\n\n-   When we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\n![](chap09/img/image5.jpg)\n\n-   The [**Schwarz criterion**](https://www.statisticshowto.com/bayesian-information-criterion/) is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n### How to interpret Bayes Factor\n\nA **Bayes Factor** can be any positive number. One of the most common interpretations is this one---first proposed by Harold Jeffereys (1961) and slightly modified by [Lee and Wagenmakers](https://www-tandfonline-com.libproxy.smu.edu.sg/doi/pdf/10.1080/00031305.1999.10474443?needAccess=true) in 2013:\n\n![](chap09/img/image6.jpg){width=\"480\"}\n\n### Two-sample mean test: *ggbetweenstats()*\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.\n\n```{r}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n### Oneway ANOVA Test: *ggbetweenstats()* method\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for One-way ANOVA test on English score by race.\n\n```{r}\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n\n-   \"ns\" → only non-significant\n-   \"s\" → only significant\n-   \"all\" → everything\n\n#### ggbetweenstats - Summary of tests\n\n![](chap09/img/image7.jpg)\n\n![](chap09/img/image8.jpg)\n\n![](chap09/img/image9.jpg)\n\n### Significant Test of Correlation: *ggscatterstats()*\n\nIn the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n```{r}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n```\n\n### Significant Test of Association (Depedence) : *ggbarstats()* methods\n\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using [*cut()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut).\n\n```{r}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n```\n\nIn this code chunk below [*ggbarstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html) is used to build a visual for Significant Test of Association\n\n```{r}\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n```\n\n## Visualising Models\n\nIn this section, you will learn how to visualise model diagnostic and model parameters by using parameters package.\n\n-   Toyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables.\n\n![](chap09/img/image4.jpg)\n\n## Getting Started\n\n## Installing and loading the required libraries\n\n::: callout-note\n### Do-It-Yourself\n\n```{r}\npacman::p_load(readxl, performance, parameters, see)\n```\n:::\n\n### Importing Excel file: readxl methods\n\nIn the code chunk below, [*read_xls()*](https://readxl.tidyverse.org/reference/read_excel.html) of [**readxl**](https://readxl.tidyverse.org/) package is used to import the data worksheet of `ToyotaCorolla.xls` workbook into R.\n\n```{r}\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n```\n\nNotice that the output object `car_resale` is a tibble data frame.\n\n### Multiple Regression Model using lm()\n\nThe code chunk below is used to calibrate a multiple linear regression model by using *lm()* of Base Stats of R.\n\n```{r}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n```\n\n### Model Diagnostic: checking for multicolinearity:\n\nIn the code chunk, [*check_collinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/index.html) package.\n\n```{r}\ncheck_collinearity(model)\n```\n\n```{r fig.height=5}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n\n### Model Diagnostic: checking normality assumption\n\nIn the code chunk, [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/index.html) package.\n\n```{r}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n```\n\n```{r}\ncheck_n <- check_normality(model1)\n```\n\n```{r fig.height=4}\nplot(check_n)\n```\n\n### Model Diagnostic: Check model for homogeneity of variances\n\nIn the code chunk, [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/index.html) package.\n\n```{r fig.height=4}\ncheck_h <- check_heteroscedasticity(model1)\n\n```\n\n```{r fig.height=4}\nplot(check_h)\n```\n\n### Model Diagnostic: Complete check\n\nWe can also perform the complete by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).\n\n```{r fig.width=12, fig.height=10}\ncheck_model(model1)\n```\n\n### Visualising Regression Parameters: see methods\n\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\n```{r}\nplot(parameters(model1))\n```\n\n### Visualising Regression Parameters: *ggcoefstats()* methods\n\nIn the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of ggstatsplot package to visualise the parameters of a regression model.\n\n```{r}\nggcoefstats(model1, \n            output = \"plot\")\n```\n\n```{r}\n#| eval: false\n#| echo: false\nrenderthis::to_pdf(from = \"https://r4va.netlify.app/chap09.html\",\n                   to = \"D://ISSS608_AY2022-23Apr/20-r4va/chap09.pdf\")\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"chap10.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","bibliography":["references.bib"],"editor":"visual","theme":"cosmo","title":"Visual Statistical Analysis","date":"12/4/2023","date-modified":"`r Sys.Date()`"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"chap10.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt","title":"Visual Statistical Analysis","date":"12/4/2023","date-modified":"`r Sys.Date()`"},"extensions":{"book":{}}}}}